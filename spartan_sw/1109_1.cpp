//바텀업 방식으로 풀어보겠다
//아까는 전체가 어떤 조합으로 쪼갠걸 다시 재귀함수에 요구하고 이랬는데
//바텀업은 이미 쪼개진걸 합치는 방식이므로
//앞까지는 동일한데 reachable이라는 불타입 함수를 만든다
//price[0][0]은 첫번째 품목의 가지수
//첫번째만 계산하는 이유는 바텀업이라 a1을 정의해줄 수 있기 때문
//이런식으로 가다가 ac가 드디어 나오는것임
//맨 처음 경우에서 구매 가능한 경우에는 예산 쓰고 남은 금액을 true로 만들어줌
//품목을 샀다는 연산이 이미 수행되었을 경우 true가 되는것
//이제 첫번째 항목 구했으니 남은것들 돌게된다
//for문을 돌며 살 수 있는지를 계산하게됨(money에서 빼본다)
//마지막에는 money가 M+1과 같은지 검사, 이럴 경우  솔루션이 없는거겠지
//이전 품목에서 특정 물건을 구매했을때 별로 현재 품목의 경우의수를 다 돌려본다
//그래서 결국 reachable은 갈수있는 곳인지 그래프의 역할을 하게됨
//구매할 수 있으면 그만큼 money올려주고
//올라갈 수 있는 한도가 정해져있으니까 그때까지 구매하는 방식
//근데 딱봐도 탑다운보다 어려움
//직관적이지 않다는 단점 길 미리 뚫어놓고 길따라서 가보겠다
//탑다운은 결과가 있고 결과에서 도출할 수 있는걸 한단계씩 밀고 나가는 느낌
//두방식 다 풀리긴하는데 자신있는 방식 또는 문제별로 느낌오는 방식을 따르면됨
//이문제는 탑다운이 더 쉬운 방식이었다
//다른건 바텀업이 더 나은 경우도 있음 ex) 피보나치
